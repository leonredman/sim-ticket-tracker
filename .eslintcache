[{"/Users/leonredman/projects/ticket-tracker/src/index.js":"1","/Users/leonredman/projects/ticket-tracker/src/App.js":"2","/Users/leonredman/projects/ticket-tracker/src/components/mainLogin/MainLogin.js":"3","/Users/leonredman/projects/ticket-tracker/src/pages/accountRegister/AccountRegister.js":"4","/Users/leonredman/projects/ticket-tracker/src/components/header/Header.js":"5","/Users/leonredman/projects/ticket-tracker/src/pages/ticketForm/TicketForm.js":"6","/Users/leonredman/projects/ticket-tracker/src/pages/resetPassword/ResetPassword.js":"7","/Users/leonredman/projects/ticket-tracker/src/pages/adminDashboard/Dashboard.js":"8","/Users/leonredman/projects/ticket-tracker/src/pages/DevDashboard/DevDashboard.js":"9","/Users/leonredman/projects/ticket-tracker/src/pages/Ws1Dashboard/Ws1Dashboard.js":"10","/Users/leonredman/projects/ticket-tracker/src/pages/QaDashboard/QaDashboard.js":"11","/Users/leonredman/projects/ticket-tracker/src/pages/updateForm/UpdateForm.js":"12","/Users/leonredman/projects/ticket-tracker/src/pages/workTicket/WorkTicket.js":"13","/Users/leonredman/projects/ticket-tracker/src/components/loginForm/LoginForm.js":"14","/Users/leonredman/projects/ticket-tracker/src/components/demoLogin/DemoLogin.js":"15","/Users/leonredman/projects/ticket-tracker/src/components/totals/Totals.js":"16","/Users/leonredman/projects/ticket-tracker/src/components/newTicketsList/NewTicketsList.js":"17","/Users/leonredman/projects/ticket-tracker/src/components/inProgressList/InProgressList.js":"18","/Users/leonredman/projects/ticket-tracker/src/components/inQaList/InQaList.js":"19","/Users/leonredman/projects/ticket-tracker/src/components/dashChart/DashChart.js":"20","/Users/leonredman/projects/ticket-tracker/src/components/sideMenu/SideMenu.js":"21","/Users/leonredman/projects/ticket-tracker/src/components/logButton/LogButton.js":"22","/Users/leonredman/projects/ticket-tracker/src/pages/loginPage/loginPage.js":"23"},{"size":195,"mtime":1611118169288,"results":"24","hashOfConfig":"25"},{"size":2152,"mtime":1630888457835,"results":"26","hashOfConfig":"25"},{"size":799,"mtime":1630201213502,"results":"27","hashOfConfig":"25"},{"size":1508,"mtime":1630201213512,"results":"28","hashOfConfig":"25"},{"size":644,"mtime":1630201213498,"results":"29","hashOfConfig":"25"},{"size":8280,"mtime":1630201213515,"results":"30","hashOfConfig":"25"},{"size":2512,"mtime":1630201213515,"results":"31","hashOfConfig":"25"},{"size":3160,"mtime":1630201213512,"results":"32","hashOfConfig":"25"},{"size":14424,"mtime":1630655692070,"results":"33","hashOfConfig":"25"},{"size":7199,"mtime":1630483477908,"results":"34","hashOfConfig":"25"},{"size":9901,"mtime":1630795336382,"results":"35","hashOfConfig":"25"},{"size":9022,"mtime":1630201213517,"results":"36","hashOfConfig":"25"},{"size":6761,"mtime":1630880469726,"results":"37","hashOfConfig":"25"},{"size":1341,"mtime":1630975349559,"results":"38","hashOfConfig":"25"},{"size":1173,"mtime":1630991000634,"results":"39","hashOfConfig":"25"},{"size":452,"mtime":1630201213508,"results":"40","hashOfConfig":"25"},{"size":1523,"mtime":1630201213504,"results":"41","hashOfConfig":"25"},{"size":1464,"mtime":1630201213499,"results":"42","hashOfConfig":"25"},{"size":1449,"mtime":1630201213500,"results":"43","hashOfConfig":"25"},{"size":1883,"mtime":1630201213496,"results":"44","hashOfConfig":"25"},{"size":1513,"mtime":1630201213507,"results":"45","hashOfConfig":"25"},{"size":189,"mtime":1630972920572,"results":"46","hashOfConfig":"25"},{"size":638,"mtime":1630991016563,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"i3mt5n",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leonredman/projects/ticket-tracker/src/index.js",[],["99","100"],"/Users/leonredman/projects/ticket-tracker/src/App.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/mainLogin/MainLogin.js",["101"],"import React from \"react\";\nimport LoginForm from \"../loginForm/LoginForm\";\nimport DemoLogin from \"../demoLogin/DemoLogin\";\nimport \"./MainLoginStyles.css\";\n\nconst MainLogin = () => {\n  return (\n    <div class=\"ui-container-login\">\n      <div className=\"ui-container-login\" \n          style={{background: \"rgb(68,189,234)\",\n                background: \"linear-gradient(90deg, rgba(68,189,234,1) 0%, rgba(52,99,203,1) 100%, rgba(52,99,203,1) 100%)\"}}>\n        <div className=\"ui middle aligned center aligned grid\">\n          <div className=\"four wide column\" style={{background: \"white\"}}>\n            <LoginForm />\n            <DemoLogin />\n          </div>\n          <div className=\"four wide column\" id=\"loginImage\"></div>\n        </div>\n      </div> \n    </div>\n  );\n};\n\nexport default MainLogin;\n",["102","103"],"/Users/leonredman/projects/ticket-tracker/src/pages/accountRegister/AccountRegister.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/header/Header.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/ticketForm/TicketForm.js",["104","105"],"import React, { useState } from \"react\";\nimport Axios from \"axios\";\n\n// we set the state for the form\nconst TicketForm = () => {\n  const [status, setStatus] = useState(\"\");\n  const [customerName, setCustomerName] = useState(\"\");\n  const [customerID, setCustomerID] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [domain, setDomain] = useState(\"\");\n  const [planType, setPlanType] = useState(\"\");\n  const [created, setCreated] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  const [websiteSpecialist, setWebsiteSpecialist] = useState(\"\");\n  const [developer, setDeveloper] = useState(\"\");\n  const [qaAgent, setQaAgent] = useState(\"\");\n\n  //function to POST/SEND data to backend/database executed on button click\n  const submitTicket = () => {\n    Axios.post(\"http://localhost:3001/ticket/create\", {\n      status: status,\n      customerName: customerName,\n      customerID: customerID,\n      email: email,\n      phoneNumber: phoneNumber,\n      domain: domain,\n      planType: planType,\n      created: created,\n      dueDate: dueDate,\n      category: category,\n      description: description,\n      priority: priority,\n      websiteSpecialist: websiteSpecialist,\n      developer: developer,\n      qaAgent: qaAgent,\n    }).then(() => {\n      // alert(\"successful insert\");\n      // try to redirect\n      window.location.href = \"/Dashboard\";\n    });\n  };\n\n  return (\n    <div className=\"newTicketContainer\">\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"six wide centered column\">\n            <h1>Create A New Ticket</h1>\n          </div>\n        </div>\n\n        <div className=\"ui row\"></div>\n\n        <div className=\"six wide centered column\">\n          <div className=\"ui form\">\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Customer Name</label>\n                <input\n                  type=\"text\"\n                  name=\"customerName\"\n                  placeholder=\"Full Name\"\n                  onChange={(e) => {\n                    setCustomerName(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Customer ID Number</label>\n                <input\n                  type=\"text\"\n                  name=\"customerID\"\n                  placeholder=\"xxxxxxxxx\"\n                  maxLength=\"9\"\n                  onChange={(e) => {\n                    setCustomerID(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Status</label>\n                <select\n                  className=\"ui dropdown\"\n                  name=\"status\"\n                  onChange={(e) => {\n                    setStatus(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Ready\">Ready</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"eight wide field\">\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Susan@email.com\"\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Phone Number</label>\n                <input\n                  type=\"text\"\n                  name=\"phoneNumber\"\n                  placeholder=\"(xxx) xxx xxxx\"\n                  maxLength=\"14\"\n                  onChange={(e) => {\n                    setPhoneNumber(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Domain</label>\n                <input\n                  type=\"text\"\n                  name=\"domain\"\n                  placeholder=\"CustomerSite.com\"\n                  onChange={(e) => {\n                    setDomain(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Plan Type</label>\n                <select\n                  className=\"ui dropdown\"\n                  name=\"planType\"\n                  onChange={(e) => {\n                    setPlanType(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Standard\">Standard</option>\n                  <option value=\"Premium\">Premium</option>\n                  <option value=\"Woo-Commerce\">Woo-Commerce</option>\n                </select>\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Created</label>\n                <input\n                  type=\"date\"\n                  name=\"created\"\n                  onChange={(e) => {\n                    setCreated(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"five wide field\">\n                <label>Due Date</label>\n                <input\n                  type=\"date\"\n                  name=\"dueDate\"\n                  onChange={(e) => {\n                    setDueDate(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"four wide field\">\n                <label>Category</label>\n                <select\n                  className=\"ui dropdown\"\n                  name=\"category\"\n                  onChange={(e) => {\n                    setCategory(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"New Build\">New Build</option>\n                  <option value=\"Revisions\">Revisions</option>\n                  <option value=\"Post Publish\">Post Publish</option>\n                </select>\n              </div>\n\n              <div className=\"twelve wide field\">\n                <label>Description</label>\n                <input\n                  type=\"text\"\n                  name=\"created\"\n                  placeholder=\"Notes\"\n                  onChange={(e) => {\n                    setDescription(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"four wide field\">\n                <label>Priority</label>\n                <select\n                  className=\"ui dropdown\"\n                  name=\"priority\"\n                  onChange={(e) => {\n                    setPriority(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Medium\">Medium</option>\n                  <option value=\"High\">High</option>\n                  <option value=\"Low\">Low</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Website Specialist</label>\n                <select\n                  className=\"ui dropdown\"\n                  name=\"websiteSpecialist\"\n                  onChange={(e) => {\n                    setWebsiteSpecialist(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select</option>\n                  <option value=\"Tom Cruize\">Tom Cruize</option>\n                  <option value=\"Brad Pitt\">Brad Pitt</option>\n                  <option value=\"Russel Crow\">Russel Crow</option>\n                </select>\n              </div>\n            </div>\n\n            <br />\n            <button className=\"ui button primary\" onClick={submitTicket}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TicketForm;\n","/Users/leonredman/projects/ticket-tracker/src/pages/resetPassword/ResetPassword.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/adminDashboard/Dashboard.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/DevDashboard/DevDashboard.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/Ws1Dashboard/Ws1Dashboard.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/QaDashboard/QaDashboard.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/updateForm/UpdateForm.js",["106","107"],"import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch, useParams } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n//import TextField from \"../ui/text-field\";\n\n// set the state for the form\nconst TicketForm = (props) => {\n  const match = useRouteMatch();\n\n  //set ticket current values to state\n  const [values, setValues] = useState({\n    status: \"\",\n    customerName: \"\",\n    customerID: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    domain: \"\",\n    planType: \"\",\n    created: \"\",\n    dueDate: \"\",\n    category: \"\",\n    description: \"\",\n    priority: \"\",\n    websiteSpecialist: \"\",\n    developer: \"\",\n    agent: \"\",\n  });\n\n  const { id } = useParams();\n\n  // updated values set to state\n  const [newValues, setNewValues] = useState([]);\n\n  const [newStatus, setNewStatus] = useState(\"\");\n  const [newCustomerName, setNewCustomerName] = useState(\"\");\n  const [newCustomerID, setNewCustomerID] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n  const [newDomain, setNewDomain] = useState(\"\");\n  const [newPlanType, setNewPlanType] = useState(\"\");\n  const [newCreated, setNewCreated] = useState(\"\");\n  const [newDueDate, setNewDueDate] = useState(\"\");\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newPriority, setNewPriority] = useState(\"\");\n  const [newWebsiteSpecialist, setNewWebsiteSpecialist] = useState(\"\");\n  const [newDeveloper, setNewDeveloper] = useState(\"\");\n  const [newQaAgent, setNewQaAgent] = useState(\"\");\n\n  // Get ticket using params id\n  useEffect(() => {\n    if (match.id !== \"new\") {\n      Axios.get(`http://localhost:3001/ticket/${id}`).then((response) => {\n        console.log(response.data);\n        setValues(response.data);\n      });\n    }\n  }, [id, match.id]);\n\n  //function to POST/SEND data to backend/database executed on button click\n  // Axios.put(\"/ticket/update/:id\", values).then(() => {  // clean up to use values variable\n  const updateTicket = (id) => {\n    Axios.put(`http://localhost:3001/ticket/update/${id}`, {\n      status: newStatus,\n      customerName: newCustomerName,\n      customerId: newCustomerID,\n      email: newEmail,\n      phoneNumber: newPhoneNumber,\n      domain: newDomain,\n      planType: newPlanType,\n      created: newCreated,\n      dueDate: newDueDate,\n      category: newCategory,\n      description: newDescription,\n      priority: newPriority,\n      websiteSpecialist: newWebsiteSpecialist,\n      developer: newDeveloper,\n      qaAgent: newQaAgent,\n    }).then(() => {\n      alert(\"successful insert\");\n      //clean up - remove alert, page to redirect to dashboard - use router and push to dashboard\n      // window.location.href = \"/Dashboard\";\n    });\n  };\n\n  console.log(values);\n\n  return (\n    <div className=\"newTicketContainer\">\n      <div className=\"ui grid\">\n        <div className=\"ui row\">\n          <div className=\"six wide centered column\">\n            <h1>Update Ticket</h1>\n          </div>\n        </div>\n        <div className=\"ui row\"></div>\n        <div className=\"six wide centered column\">\n          <div className=\"ui form\">\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Customer Name</label>\n                <input\n                  type=\"text\"\n                  name=\"customerName\"\n                  defaultValue={values.customerName}\n                  onChange={(e) => {\n                    setNewCustomerName(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Customer ID Number</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.customerID}\n                  onChange={(e) => {\n                    setNewCustomerID(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Status</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.status}\n                  onChange={(e) => {\n                    setNewStatus(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Email</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  defaultValue={values.email}\n                  onChange={(e) => {\n                    setNewEmail(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Phone Number</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.phoneNumber}\n                  onChange={(e) => {\n                    setNewPhoneNumber(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Domain</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.domain}\n                  onChange={(e) => {\n                    setNewDomain(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Plan Type</label>\n                <input\n                  type=\"text\"\n                  name=\"planType\"\n                  defaultValue={values.planType}\n                  onChange={(e) => {\n                    setNewPlanType(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Created</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.created}\n                  onChange={(e) => {\n                    setNewCreated(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Due Date</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.dueDate}\n                  onChange={(e) => {\n                    setNewDueDate(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Category</label>\n                <input\n                  type=\"text\"\n                  name=\"category\"\n                  defaultValue={values.category}\n                  onChange={(e) => {\n                    setNewCategory(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Description</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.description}\n                  onChange={(e) => {\n                    setNewDescription(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Priority</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.priority}\n                  onChange={(e) => {\n                    setNewPriority(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"fields\">\n              <div className=\"six wide field\">\n                <label>Website Specialist</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.websiteSpecialist}\n                  onChange={(e) => {\n                    setNewWebsiteSpecialist(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>Developer</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.developer}\n                  onChange={(e) => {\n                    setNewDeveloper(e.target.value);\n                  }}\n                />\n              </div>\n\n              <div className=\"six wide field\">\n                <label>QA Agent</label>\n                <input\n                  type=\"text\"\n                  defaultValue={values.qaAgent}\n                  onChange={(e) => {\n                    setNewQaAgent(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <button\n              className=\"ui button primary\"\n              onClick={() => updateTicket(id)}\n            >\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n      )\n    </div>\n  );\n};\n\nexport default TicketForm;\n","/Users/leonredman/projects/ticket-tracker/src/pages/workTicket/WorkTicket.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/loginForm/LoginForm.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/demoLogin/DemoLogin.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/totals/Totals.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/newTicketsList/NewTicketsList.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/inProgressList/InProgressList.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/inQaList/InQaList.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/dashChart/DashChart.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/sideMenu/SideMenu.js",[],"/Users/leonredman/projects/ticket-tracker/src/components/logButton/LogButton.js",[],"/Users/leonredman/projects/ticket-tracker/src/pages/loginPage/loginPage.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":11,"column":17,"nodeType":"114","messageId":"115","endLine":11,"endColumn":27},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":19,"column":21,"nodeType":"120","messageId":"121","endLine":19,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":20,"column":19,"nodeType":"120","messageId":"121","endLine":20,"endColumn":29},{"ruleId":"118","severity":1,"message":"123","line":33,"column":10,"nodeType":"120","messageId":"121","endLine":33,"endColumn":19},{"ruleId":"118","severity":1,"message":"124","line":33,"column":21,"nodeType":"120","messageId":"121","endLine":33,"endColumn":33},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected",["125"],["126"],"no-unused-vars","'setDeveloper' is assigned a value but never used.","Identifier","unusedVar","'setQaAgent' is assigned a value but never used.","'newValues' is assigned a value but never used.","'setNewValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]